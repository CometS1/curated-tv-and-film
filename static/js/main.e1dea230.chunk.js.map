{"version":3,"sources":["content.js","App.js","serviceWorker.js","index.js"],"names":["content","type","title","season","episode","episode_title","imdb","url","thumbnail","year","data","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","searchString","target","value","setState","trim","toLowerCase","length","searchResult","state","filter","el","match","react_default","a","createElement","className","onChange","placeholder","xmlns","viewBox","width","height","fill","d","map","item","index","key","rel","href","src","alt","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1dea230.chunk.js","sourcesContent":["var content = [\n\t{\n\t\ttype: \"tv_show\",\n\t\ttitle: \"The Newsroom\",\n\t\tseason: 1,\n\t\tepisode: 1,\n\t\tepisode_title: \"We Just Decided To\",\n\t\timdb: \"http://www.imdb.com/title/tt1870479/\",\n\t\turl: \"https://www.youtube.com/watch?v=wTjMqda19wk\",\n\t\tthumbnail: \"https://camo.githubusercontent.com/edfa82b8adb068698bbe4a3bc04b8825870b3fa5/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f77546a4d7164613139776b2f302e6a7067\"\n\t},\n\t{\n\t\ttype: \"tv_show\",\n\t\ttitle: \"Mr.Robot\",\n\t\tseason: 2,\n\t\tepisode: 3,\n\t\tepisode_title: \"eps2.1_k3rnel-pan1c.ksd\",\n\t\timdb: \"http://www.imdb.com/title/tt4158110/\",\n\t\turl: \"https://www.youtube.com/watch?v=AZeLHD-725o\",\n\t\tthumbnail: \"https://camo.githubusercontent.com/8fef1a38c7e3bd3f2ce6ade41373c17755545996/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f415a654c48442d3732356f2f302e6a7067\"\n\t},\n\t{\n\t\ttype: \"tv_show\",\n\t\ttitle: \"Silicon Valley\",\n\t\tseason: 1,\n\t\tepisode: 8,\n\t\tepisode_title: \"Optimal Tip-To-Top Efficiency\",\n\t\timdb: \"http://www.imdb.com/title/tt2575988/\",\n\t\turl: \"https://www.youtube.com/watch?v=mMeqEDEfniA\",\n\t\tthumbnail: \"https://camo.githubusercontent.com/43dac8b3bb734eff5c7b737756a10efec8e85b77/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f6d4d6571454445666e69412f302e6a7067\"\n\t},\n\t{\n\t\ttype: \"tv_show\",\n\t\ttitle: \"Game of Thrones\",\n\t\tseason: 6,\n\t\tepisode: 9,\n\t\tepisode_title: \"Battle of the Bastards\",\n\t\timdb: \"https://www.imdb.com/title/tt4283088/?ref_=ttep_ep9\",\n\t\turl: \"https://www.youtube.com/watch?v=m8rURwkvOx0\",\n\t\tthumbnail: \"https://camo.githubusercontent.com/a179e6c7a7b049589ea0b016919f837e45150d42/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f6d38725552776b764f78302f302e6a7067\"\n\t},\n\t{\n\t\ttype: \"movie\",\n\t\ttitle: \"Oldboy\",\n\t\tyear: 2003,\n\t\timdb: \"http://www.imdb.com/title/tt0364569/\",\n\t\turl: \"https://www.youtube.com/watch?v=VwIIDzrVVdc\",\n\t\tthumbnail: \"https://camo.githubusercontent.com/542cfde27c129a73e8bd5897239ce714f7395207/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f56774949447a72565664632f302e6a7067\"\n\t},\n\t{\n\t\ttype: \"movie\",\n\t\ttitle: \"Olympus has fallen\",\n\t\tyear: 2013,\n\t\timdb: \"https://www.imdb.com/title/tt2302755/\",\n\t\turl: \"https://www.youtube.com/watch?v=N8WXitDnA_U\",\n\t\tthumbnail: \"https://camo.githubusercontent.com/c4fc2f1db0a033f165f0484ae07424bccd4b8b06/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f4e3857586974446e415f552f302e6a7067\"\n\t},\n\t{\n\t\ttype: \"tv_show\",\n\t\ttitle: \"Rick and Morty\",\n\t\tseason: 3,\n\t\tepisode: 1,\n\t\tepisode_title: \"Rickshank Redemption\",\n\t\timdb: \"https://www.imdb.com/title/tt2861424/\",\n\t\turl: \"https://www.youtube.com/watch?v=uzeODC-_IHw&t=81\",\n\t\tthumbnail: \"https://img.youtube.com/vi/uzeODC-_IHw/0.jpg\"\n\t},\n];\n\nexport default content;\n","import React, { Component } from 'react';\nimport './App.css';\nimport content from './content.js';\n\nvar data = content;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchString: \"\",\n      content: content\n    }\n  }\n\n  handleChange = (event) => {\n    var searchString = event.target.value;\n    this.setState({searchString: searchString});\n\n    searchString = searchString.trim().toLowerCase();\n\n    if(searchString.length > 0) {\n      var searchResult = this.state.content.filter((el) =>\n        el.title.toLowerCase().match(searchString));\n      this.setState({content: searchResult});\n    } else {\n      this.setState({content: data});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"mainContainer\">\n          <div className=\"headerContainer\">\n          <div className=\"logoContainer\">\n            <div className=\"logoImage\">Curated TV and Film</div>\n          </div>\n          <div className=\"content-filter\">\n            <input type=\"text\" className=\"form-control\" value={this.state.searchString} onChange={this.handleChange} placeholder=\"Search here\"/>\n          </div>\n          <ul className=\"topMenuContainer\">\n              <li className=\"menuItem\">\n                Home\n              </li>\n              <li className=\"imageWaraper\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 212 212\" width=\"36px\" height=\"36px\"><path fill=\"#DFE5E7\" d=\"M106.251.5C164.653.5 212 47.846 212 106.25S164.653 212 106.25 212C47.846 212 .5 164.654.5 106.25S47.846.5 106.251.5z\"></path><g fill=\"#FFF\"><path d=\"M173.561 171.615a62.767 62.767 0 0 0-2.065-2.955 67.7 67.7 0 0 0-2.608-3.299 70.112 70.112 0 0 0-3.184-3.527 71.097 71.097 0 0 0-5.924-5.47 72.458 72.458 0 0 0-10.204-7.026 75.2 75.2 0 0 0-5.98-3.055c-.062-.028-.118-.059-.18-.087-9.792-4.44-22.106-7.529-37.416-7.529s-27.624 3.089-37.416 7.529c-.338.153-.653.318-.985.474a75.37 75.37 0 0 0-6.229 3.298 72.589 72.589 0 0 0-9.15 6.395 71.243 71.243 0 0 0-5.924 5.47 70.064 70.064 0 0 0-3.184 3.527 67.142 67.142 0 0 0-2.609 3.299 63.292 63.292 0 0 0-2.065 2.955 56.33 56.33 0 0 0-1.447 2.324c-.033.056-.073.119-.104.174a47.92 47.92 0 0 0-1.07 1.926c-.559 1.068-.818 1.678-.818 1.678v.398c18.285 17.927 43.322 28.985 70.945 28.985 27.678 0 52.761-11.103 71.055-29.095v-.289s-.619-1.45-1.992-3.778a58.346 58.346 0 0 0-1.446-2.322zM106.002 125.5c2.645 0 5.212-.253 7.68-.737a38.272 38.272 0 0 0 3.624-.896 37.124 37.124 0 0 0 5.12-1.958 36.307 36.307 0 0 0 6.15-3.67 35.923 35.923 0 0 0 9.489-10.48 36.558 36.558 0 0 0 2.422-4.84 37.051 37.051 0 0 0 1.716-5.25c.299-1.208.542-2.443.725-3.701.275-1.887.417-3.827.417-5.811s-.142-3.925-.417-5.811a38.734 38.734 0 0 0-1.215-5.494 36.68 36.68 0 0 0-3.648-8.298 35.923 35.923 0 0 0-9.489-10.48 36.347 36.347 0 0 0-6.15-3.67 37.124 37.124 0 0 0-5.12-1.958 37.67 37.67 0 0 0-3.624-.896 39.875 39.875 0 0 0-7.68-.737c-21.162 0-37.345 16.183-37.345 37.345 0 21.159 16.183 37.342 37.345 37.342z\"></path></g></svg>\n              </li>\n          </ul>\n        </div>\n      <section className=\"app container\">\n        <main className=\"main-content\">\n          <div className=\"content-list\">\n            {this.state.content.length ? (\n              <ul>\n                {this.state.content.map((item, index) => {\n                  return (\n                    <li key={index}>\n                      <div className=\"row\">\n                        <div className=\"item-thumbnail\">\n                          <a target=\"_blank\"  rel=\"noopener noreferrer\" href={item.url}>\n                            <img src={item.thumbnail} alt={item.title}/>\n                          </a>\n                        </div>\n                        <div className=\"item-info\">\n                          <h2>{item.title}{item.year ? (\" (\" + item.year + \")\") : ''}</h2>\n                          {item.type === \"tv_show\" &&\n                            <div className=\"tvshow-details\">\n                              <div className=\"tvshow-details__item\"><span>Season:</span> {item.season}</div>\n                              <div className=\"tvshow-details__item\"><span>Episode:</span> {item.episode}</div>\n                              <div className=\"tvshow-details__item\"><span>Episode Title:</span> {item.episode_title}</div>\n                            </div>\n                          }\n                          <div className=\"item-imdb\">\n                            <span>IMDB:</span><a target=\"_blank\"  rel=\"noopener noreferrer\" href={item.imdb}>{item.imdb}</a>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                  )\n                })}\n              </ul>\n              ) : (\n              this.state.searchString ? (\n                <p>No search result</p>\n                ) : (\n                <p>Can't load the data.</p>\n                )\n              )\n            }\n          </div>\n        </main>\n      </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}